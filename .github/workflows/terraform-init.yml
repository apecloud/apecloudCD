name: Terrafrom Init

on:
  workflow_call:
    inputs:
      cloud-provider:
        description: 'cloud k8s cluster provider (e.g. vke/eks/gke/aks/aks-cn)'
        type: string
        required: false
        default: 'eks'
      cluster-version:
        description: 'k8s cluster version (e.g. 1.28)'
        type: string
        required: false
        default: ''
      instance-type:
        description: 'node instance types (e.g. amd64/arm64)'
        type: string
        required: false
        default: 'amd64'
      artifact-name:
        description: 'terraform artifact name'
        type: string
        required: false
        default: ''
      region:
        description: 'k8s region name'
        type: string
        required: false
        default: ''
      cluster-name:
        description: 'k8s cluster name'
        type: string
        required: false
        default: ''
      test-type:
        description: 'test cluster type (e.g. mysql|postgres|redis|mongo|kafka|pulsar|weaviate|qdrant|smarte|scale|greptimedb|nebula|risingwave|starrocks|oceanbase)'
        type: string
        required: false
        default: ''
      test-mode:
        description: 'test mode'
        type: string
        required: false
        default: ""
      node-type:
        description: 'node type'
        type: string
        required: false
        default: ""
      node-size:
        description: 'node size'
        type: string
        required: false
        default: ""
      kb-version:
        description: 'kubeblocks release version'
        type: string
        required: false
        default: ''
      enable-spot:
        description: 'enable spot node'
        type: string
        required: false
        default: ''
      disk-size:
        description: 'disk size'
        type: string
        required: false
        default: ''
    outputs:
      k8s-cluster-name:
        description: "k8s cluster name"
        value: ${{ jobs.terraform-init.outputs.k8s-cluster-name }}

env:
  GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
  AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
  AZURE_CREDENTIALS_CN: ${{ secrets.AZURE_CREDENTIALS_CN }}
  VOLCENGIUNE_ACCESS_KEY: ${{ secrets.VOLCENGIUNE_ACCESS_KEY }}
  VOLCENGIUNE_SECRET_KEY: ${{ secrets.VOLCENGIUNE_SECRET_KEY }}

permissions:
  id-token: write
  contents: read

jobs:
  terraform-init:
    runs-on: ubuntu-latest
    outputs:
      k8s-cluster-name: ${{ steps.terraform_init.outputs.k8s-cluster-name }}
    steps:
      - name: checkout cloud-provider
        uses: actions/checkout@v4
        with:
          repository: apecloud/cloud-provider
          ref: "apecd-deploy"
          path: ./
          token: ${{ env.GITHUB_TOKEN }}

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.6

      - uses: aws-actions/configure-aws-credentials@v4
        if: ${{ inputs.cloud-provider == 'eks' && env.AWS_ACCESS_KEY_ID != '' && env.AWS_SECRET_ACCESS_KEY != '' }}
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: "${{ inputs.region }}"

      - if: ${{ inputs.cloud-provider == 'gke' && env.GOOGLE_CREDENTIALS != '' }}
        id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ env.GOOGLE_CREDENTIALS }}'

      - if: ${{ inputs.cloud-provider == 'aks' && env.AZURE_CREDENTIALS != '' }}
        uses: azure/login@v1
        with:
          creds: ${{ env.AZURE_CREDENTIALS }}

      - if: ${{ inputs.cloud-provider == 'aks-cn' && env.AZURE_CREDENTIALS_CN != '' }}
        uses: azure/login@v1
        with:
          creds: ${{ env.AZURE_CREDENTIALS_CN }}
          environment: azurechinacloud

      - name: terraform init k8s
        id: terraform_init
        run: |
          K8S_CLUSTER_NAME="${{ inputs.cluster-name }}"
          echo "k8s-cluster-name:${K8S_CLUSTER_NAME}"
          echo k8s-cluster-name=${K8S_CLUSTER_NAME} >> $GITHUB_OUTPUT
