name: Test Cloud On K3S

on:
  workflow_call:
    inputs:
      release-version:
        description: 'apecloud release version'
        type: string
        required: false
        default: 'latest'
      kubeblocks-version:
        description: 'kubeblocks release version'
        type: string
        required: false
        default: 'latest'
      test-type:
        description: 'test type'
        type: string
        required: false
        default: '0'
      test-type-name:
        description: 'test type name'
        type: string
        required: false
        default: ''
      test-args:
        description: 'test args'
        type: string
        required: false
        default: ''
      k3s-version:
        description: 'k3s cluster version (e.g. 1.26)'
        type: string
        required: false
        default: '1.26'
      testinfra-branch:
        description: 'testinfra branch name'
        type: string
        required: false
        default: 'main'
      e2etest-branch:
        description: 'e2etest branch name'
        type: string
        required: false
        default: 'test-ci'
      apecloud-branch:
        description: 'apecloud branch name'
        type: string
        required: false
        default: 'main'
    outputs:
      deploy-result:
        description: "deploy result"
        value: ${{ jobs.cloud-test-k3s.outputs.deploy-result }}
      test-result:
        description: "e2e test result"
        value: "${{ jobs.cloud-test-k3s.outputs.test-result }}"

env:
  GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  HELM_VERSION: v3.14.4
  K3D_NAME: default
  REGION: us-central1
  AUTH0_ID_TOKEN: ${{ secrets.AUTH0_ID_TOKEN }}
  DSN: "postgres://kubeblockscloud:kubeblockscloudhk2143232@localhost:5432/kubeblockscloud?sslmode=disable"
  CLOUD_CN_ENV: ${{ secrets.CLOUD_CN_ENV }}

permissions:
  id-token: write
  contents: read

jobs:
  cloud-test-k3s:
    name: run ${{ inputs.test-type-name }}
    runs-on: [ self-hosted, k3d-runner ]
    outputs:
      deploy-result: ${{ steps.deploy_cloud.outputs.deploy-result }}
      test-result: ${{ steps.test_result.outputs.test-result }}
      runner-name: ${{ steps.test_result.outputs.runner-name }}
    steps:
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.21"

      - name: checkout testinfra
        uses: actions/checkout@v4
        with:
          repository: apecloud/testinfra
          ref: ${{ inputs.testinfra-branch }}
          path: testinfra
          token: ${{ env.GITHUB_TOKEN }}

      - name: setup k3d k3s
        uses: apecloud-inc/setup-k3d-k3s@v1
        with:
          k3d-name: "${{ env.K3D_NAME }}"
          version: "v${{ inputs.k3s-version }}"
          github-token: ${{ env.GITHUB_TOKEN }}
          k3d-args: --no-lb --k3s-node-label topology.hostpath.csi/node=k3d-${{ env.K3D_NAME }}-server-0@server:0

      - name: Checkout apecloud Code
        uses: actions/checkout@v4
        with:
          repository: apecloud/apecloud
          path: apecloud
          ref: ${{ inputs.apecloud-branch }}
          token: ${{ env.GITHUB_TOKEN }}

      - name: Checkout e2etest Code
        uses: actions/checkout@v4
        with:
          repository: apecloud/e2etest
          path: e2etest
          ref: ${{ inputs.e2etest-branch }}
          token: ${{ env.GITHUB_TOKEN }}

      - name: run cloud installer
        run: |
          cd e2etest
          make cloud-installer

      - name: run e2e test
        id: run_e2e_test
        run: |
          cd e2etest
          make test-e2e-apecloud
          echo E2E_TEST_RESULT=1 >> $GITHUB_ENV

      - name: return cloud e2e test result
        id: test_result
        if: ${{ always() }}
        run: |
          if [[ "${E2E_TEST_RESULT}" == '1' ]]; then
              echo test-result=[PASSED] >> $GITHUB_OUTPUT
          else
              echo test-result=[FAILED] >> $GITHUB_OUTPUT
          fi
          
          echo runner-name=${RUNNER_NAME} >> $GITHUB_OUTPUT

  remove-runner:
    name: remove ${{ inputs.test-type-name }} runner
    needs: [ cloud-test-k3s ]
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Checkout apecloud-cd Code
        uses: actions/checkout@v4
        with:
          repository: apecloud/apecloud-cd
          path: ./

      - name: remove runner
        run: |
          bash .github/utils/utils.sh --type 25 \
              --github-token "${{ env.GITHUB_TOKEN }}" \
              --github-repo "${{ github.repository }}" \
              --runner-name ${{ needs.cloud-test-k3s.outputs.runner-name }}
